#include "types.h"
#include "defs.h"
#include "param.h"
#include "x86.h"
#include "mmu.h"
#include "proc.h"
#include "thread.h"
#include "stat.h"

void
lock_acquire(struct lock_t *lock)
{
  //   if(lock_holding(lock))
  //     panic("acquire");

  while(xchg(&lock->locked, 1) != 0)
    ;
}

void
lock_release(struct lock_t *lock)
{
  xchg(&lock->locked, 0);
}

void
lock_init(struct lock_t *lock)
{
  lock->locked = 0;
}

int
lock_holding(struct lock_t *lock)
{
  return lock->locked;
}

int
thread_create(void *(*start_routine)(void*), void *arg) {
  return 0;
}
